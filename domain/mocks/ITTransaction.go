// Code generated by mockery v2.46.0. DO NOT EDIT.

package mocks

import (
	model "setokoapp/domain/model"

	mock "github.com/stretchr/testify/mock"
)

// ITTransaction is an autogenerated mock type for the ITTransaction type
type ITTransaction struct {
	mock.Mock
}

// FindOrderReceipt provides a mock function with given fields: trxId
func (_m *ITTransaction) FindOrderReceipt(trxId string) (*model.OrderReceipt, error) {
	ret := _m.Called(trxId)

	if len(ret) == 0 {
		panic("no return value specified for FindOrderReceipt")
	}

	var r0 *model.OrderReceipt
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*model.OrderReceipt, error)); ok {
		return rf(trxId)
	}
	if rf, ok := ret.Get(0).(func(string) *model.OrderReceipt); ok {
		r0 = rf(trxId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.OrderReceipt)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(trxId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewITTransaction creates a new instance of ITTransaction. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewITTransaction(t interface {
	mock.TestingT
	Cleanup(func())
}) *ITTransaction {
	mock := &ITTransaction{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
