// Code generated by mockery v2.46.0. DO NOT EDIT.

package mocks

import (
	model "setokoapp/domain/model"

	mock "github.com/stretchr/testify/mock"
)

// IMProduct is an autogenerated mock type for the IMProduct type
type IMProduct struct {
	mock.Mock
}

// FindProductOrder provides a mock function with given fields: orderId
func (_m *IMProduct) FindProductOrder(orderId string) ([]model.ProductOrder, error) {
	ret := _m.Called(orderId)

	if len(ret) == 0 {
		panic("no return value specified for FindProductOrder")
	}

	var r0 []model.ProductOrder
	var r1 error
	if rf, ok := ret.Get(0).(func(string) ([]model.ProductOrder, error)); ok {
		return rf(orderId)
	}
	if rf, ok := ret.Get(0).(func(string) []model.ProductOrder); ok {
		r0 = rf(orderId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.ProductOrder)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(orderId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIMProduct creates a new instance of IMProduct. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIMProduct(t interface {
	mock.TestingT
	Cleanup(func())
}) *IMProduct {
	mock := &IMProduct{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
